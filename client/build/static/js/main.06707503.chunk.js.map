{"version":3,"sources":["Pages/History.js","Navs/NavbarTop.js","Pages/Home.js","Pages/UsersTable.js","Pages/Error.js","Pages/Users.js","Pages/UsersTable2.js","Pages/Users2.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","forceRefresh","url","Navbarfunc","_useState","useState","_useState2","Object","slicedToArray","show","setShow","_useState3","_useState4","username","setUsername","_useState5","_useState6","password","setPassword","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ButtonToolbar","Button","onClick","Modal","onHide","animation","size","aria-labelledby","centered","Header","closeButton","Title","Body","Form","Group","controlId","Control","type","placeholder","value","onChange","e","target","Footer","console","log","axios","method","data","then","res","status","email","localStorage","setItem","history","push","window","location","reload","catch","err","clear","NavbarTop","React","Component","GetUsername","style","position","left","top","transform","getItem","Home","UsersTable","_React$useState","_React$useState2","users","setUsers","_React$useState3","activeModal","_React$useState4","handleClose","_React$useState5","show0","activeModal0","_React$useState6","setShow0","handleClose0","useEffect","fetch","results","json","_React$useState7","showdelete","activedelete","_React$useState8","SetShowdelete","handleClosedelete","_React$useState9","_id","first_name","country_name","city_name","state_name","_React$useState10","modifyuser","setModifyuser","updateValue","_objectSpread","defineProperty","name","_React$useState11","_React$useState12","showcreate","setShowcreate","handleShowcreate","handleClosecreate","_React$useState13","_React$useState14","newuser","setNewuser","createRecord","preventDefault","updateField","ButtonGroup","aria-label","onSubmit","as","Row","Label","column","sm","Col","form","Table","responsive","map","user","key","index","readOnly","company_address","userid","document","getElementById","elements","modifyRecord","query","Id","Error","CheckLogin","Error_Error","Users","Container","fluid","UsersTable2_objectSpread","Search","SearchBar","lib_default","bootstrap4","stripped","keyField","columns","dataField","text","sort","defaultSorted","order","cellEdit","cellEditFactory","mode","blurToSave","UsersTable2_UsersTable","Users2_CheckLogin","App","NavbarTop_NavbarTop","react_router","exact","path","component","Users2","Boolean","hostname","match","ReactDOM","render","react_router_dom","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+UAEeA,cAAqB,CAChCC,cAAc,qBCEdC,EAAmF,0DAEvF,SAASC,IAAa,IAAAC,EACGC,oBAAS,GADZC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACRI,EADQJ,EAAA,GAAAK,EAMWN,mBAAS,IANpBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAMdE,EANcD,EAAA,GAMJE,EANIF,EAAA,GAAAG,EAOWV,mBAAS,IAPpBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAOdE,EAPcD,EAAA,GAOJE,EAPIF,EAAA,GA8CrB,OACCG,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACtDP,EAAAC,EAAAC,cAACC,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAnB,yBACAT,EAAAC,EAAAC,cAACC,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7BX,EAAAC,EAAAC,cAACC,EAAA,EAAOS,SAAR,CAAiBC,GAAG,yBACnBb,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAKC,UAAU,WACdf,EAAAC,EAAAC,cAACY,EAAA,EAAIE,KAAL,CAAUP,KAAK,SAAf,QACAT,EAAAC,EAAAC,cAACY,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,SACAT,EAAAC,EAAAC,cAACY,EAAA,EAAIE,KAAL,CAAUP,KAAK,WAAf,WAEDT,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACCd,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACCjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQX,QAAQ,OAAOY,QAxDV,kBAAM5B,GAAQ,KAwD3B,UAEAS,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAO9B,KAAMA,EAAM+B,OAzDL,kBAAM9B,GAAQ,IAyDY+B,WAAW,EAAMC,KAAK,KAAKC,kBAAgB,gCAAgCC,UAAQ,GAC1HzB,EAAAC,EAAAC,cAACkB,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACxB3B,EAAAC,EAAAC,cAACkB,EAAA,EAAMQ,MAAP,uBAED5B,EAAAC,EAAAC,cAACkB,EAAA,EAAMS,KAAP,KACC7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACrBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,WAAWC,MAAO1C,EAAU2C,SAAU,SAAAC,GAAC,OAAI3C,EAAY2C,EAAEC,OAAOH,WAEvGpC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAYC,UAAU,qBACrBhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,MAAOtC,EAAUuC,SAAU,SAAAC,GAAC,OAAIvC,EAAYuC,EAAEC,OAAOH,YAG5GpC,EAAAC,EAAAC,cAACkB,EAAA,EAAMoB,OAAP,KACCxC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQgB,KAAK,SAAS3B,QAAQ,UAAUY,QAjE3B,WACpB5B,GAAQ,GACRkD,QAAQC,IAAIhD,GACZ+C,QAAQC,IAAI5C,GAEZ6C,IAAM,CACLC,OAAQ,OACR7D,IAAKA,EAAM,SACX8D,KAAM,CACLnD,SAAUA,EACVI,SAAUA,KAGVgD,KAAK,SAAAC,GACa,MAAfA,EAAIC,QACNP,QAAQC,IAAIK,EAAIF,KAAKI,OACrBC,aAAaC,QAAQ,aAAcJ,EAAIF,KAAKI,OAC5CG,EAAQC,KAAK,WACbC,OAAOC,SAASC,WAEhBJ,EAAQC,KAAK,WACbC,OAAOC,SAASC,YAGjBC,MAAM,SAAAC,GACNjB,QAAQC,IAAIgB,GACZN,EAAQC,KAAK,YACbC,OAAOC,SAASC,aAsCX,SAMHxD,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACCjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQX,QAAQ,QAAQY,QAzCR,WAErB+B,aAAaS,QACbL,OAAOC,SAASC,WAsCX,oBAScI,mLAEnB,OACE5D,EAAAC,EAAAC,cAAClB,EAAD,aAHmC6E,IAAMC,WC/F7C,SAASC,IAQL,OACI/D,EAAAC,EAAAC,cAAA,OAAK8D,MANG,CACRC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,0BAKPpE,EAAAC,EAAAC,cAAA,qBAAagD,aAAamB,QAAQ,oBAKzBC,mLAEb,OACItE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6D,EAAD,cAJkBF,IAAMC,ymBCbzB,SAASS,IACvB,IAAIxF,EAAmF,0DADnDyF,EAGVX,IAAM3E,SAAS,IAHLuF,EAAArF,OAAAC,EAAA,EAAAD,CAAAoF,EAAA,GAG7BE,EAH6BD,EAAA,GAGtBE,EAHsBF,EAAA,GAAAG,EAKZf,IAAM3E,SAAS,CACtCI,MAAM,EACNuF,YAAa,OAPsBC,EAAA1F,OAAAC,EAAA,EAAAD,CAAAwF,EAAA,GAK7BtF,EAL6BwF,EAAA,GAKvBvF,EALuBuF,EAAA,GAa9BC,EAAc,kBAAMxF,EAAQ,CACjCD,MAAM,EACNuF,YAAa,QAfsBG,EAkBVnB,IAAM3E,SAAS,CACxC+F,OAAO,EACPC,aAAc,OApBqBC,EAAA/F,OAAAC,EAAA,EAAAD,CAAA4F,EAAA,GAkB7BC,EAlB6BE,EAAA,GAkBtBC,EAlBsBD,EAAA,GA0B9BE,EAAe,kBAAMD,EAAS,CACnC9F,MAAM,EACN4F,aAAc,QAIfrB,IAAMyB,UAAU,WACfC,MAAMxG,GACJ+D,KAAK,SAAA0C,GAAO,OAAIA,EAAQC,SACxB3C,KAAK,SAAA4B,GACLC,EAASD,MAGT,CAAC3F,IAvCgC,IAAA2G,EAyCA7B,IAAM3E,SAAS,CAClDyG,YAAY,EACZC,aAAc,OA3CqBC,EAAAzG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAyC7BC,EAzC6BE,EAAA,GAyCjBC,EAzCiBD,EAAA,GAiD9BE,EAAoB,kBAAMD,EAAc,CAC7CH,YAAY,EACZC,aAAc,QAnDqB,IAAAI,EAiFAnC,IAAM3E,SAAS,CAClD+G,IAAI,GACJhD,MAAO,GACPnD,SAAU,GACVoG,WAAY,GACZC,aAAc,GACdC,UAAW,GACXC,WAAY,KAxFuBC,EAAAlH,OAAAC,EAAA,EAAAD,CAAA4G,EAAA,GAiF7BO,EAjF6BD,EAAA,GAiFjBE,EAjFiBF,EAAA,GAyI9BG,EAAc,SAACnE,GACpBG,QAAQC,IAAIJ,EAAEC,OAAOH,OACrBoE,EAAaE,EAAA,GACTH,EADSnH,OAAAuH,EAAA,EAAAvH,CAAA,GAEXkD,EAAEC,OAAOqE,KAAOtE,EAAEC,OAAOH,UA7IQyE,EAkSAhD,IAAM3E,UAAS,GAlSf4H,EAAA1H,OAAAC,EAAA,EAAAD,CAAAyH,EAAA,GAkS7BE,EAlS6BD,EAAA,GAkSjBE,EAlSiBF,EAAA,GAoS9BG,EAAmB,WACxBD,GAAc,IAETE,EAAoB,WACzBF,GAAc,IAxSqBG,EA2SNtD,IAAM3E,SAAS,CAC5C+G,IAAI,GACJhD,MAAO,GACPnD,SAAU,GACVoG,WAAY,GACZC,aAAc,GACdC,UAAW,GACXC,WAAY,KAlTuBe,EAAAhI,OAAAC,EAAA,EAAAD,CAAA+H,EAAA,GA2S7BE,EA3S6BD,EAAA,GA2SpBE,EA3SoBF,EAAA,GAqT9BG,EAAe,SAAAjF,GACpBA,EAAEkF,iBACF/E,QAAQC,IAAI2E,GAEZ1E,IAAM,CACLC,OAAQ,OACR7D,IAAKA,EAAM,YACX8D,KAAM,CACLI,MAAOoE,EAAQpE,MACfnD,SAAUuH,EAAQvH,SAClBoG,WAAYmB,EAAQnB,WACpBC,aAAckB,EAAQlB,aACtBC,UAAWiB,EAAQjB,UACnBC,WAAYgB,EAAQhB,cAGpBvD,KAAK,SAAAC,GACc,MAAfA,EAAIC,QACPP,QAAQC,IAAI,kBACZY,OAAOC,SAASC,WAEhBf,QAAQC,IAAI,iBACZY,OAAOC,SAASC,YAGjBC,MAAM,SAAAC,GACNjB,QAAQC,IAAIgB,MAIT+D,EAAc,SAAAnF,GACnBgF,EAAUZ,EAAA,GACNW,EADMjI,OAAAuH,EAAA,EAAAvH,CAAA,GAERkD,EAAEC,OAAOqE,KAAOtE,EAAEC,OAAOH,UA8D5B,OACCpC,EAAAC,EAAAC,cAAA,WAzDCF,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAaC,aAAW,iBACvB3H,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQK,KAAK,KAAKhB,QAAQ,UAAUY,QAAS8F,GAA7C,UACAjH,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAO9B,KAAMyH,EAAY1F,OAAQ6F,EAAmB5F,WAAW,EAAMC,KAAK,KAAKC,kBAAgB,gCAAgCC,UAAQ,GACtIzB,EAAAC,EAAAC,cAACkB,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACxB3B,EAAAC,EAAAC,cAACkB,EAAA,EAAMQ,MAAP,gBAED5B,EAAAC,EAAAC,cAACkB,EAAA,EAAMS,KAAP,KACC7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMjB,GAAG,aAAa+G,SAAUL,GAC/BvH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,sBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,SACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,oBAAoBC,MAAOiF,EAAQpE,MAAO2D,KAAK,QAAQvE,SAAUoF,MAGzGzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,YACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,WAAWC,YAAY,GAAGC,MAAOiF,EAAQvH,SAAU8G,KAAK,WAAWvE,SAAUoF,MAGlGzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGC,MAAOiF,EAAQnB,WAAYU,KAAK,aAAavE,SAAUoF,MAGlGzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,gBACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGC,MAAOiF,EAAQlB,aAAcS,KAAK,eAAevE,SAAUoF,MAGtGzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,aACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGC,MAAOiF,EAAQjB,UAAWQ,KAAK,YAAYvE,SAAUoF,MAGhGzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGC,MAAOiF,EAAQhB,WAAYO,KAAK,aAAavE,SAAUoF,QAKpGzH,EAAAC,EAAAC,cAACkB,EAAA,EAAMoB,OAAP,KACCxC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQiH,KAAK,aAAajG,KAAK,SAAS3B,QAAQ,WAAhD,cAWJP,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAAOC,YAAU,GAChBrI,EAAAC,EAAAC,cAAA,aACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,0BAGFF,EAAAC,EAAAC,cAAA,aAlRKwE,EAAM4D,IAAI,SAACC,GAEjB,OACCvI,EAAAC,EAAAC,cAAA,MAAIsI,IAAKD,EAAKtC,KACbjG,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGa,UAAU,eAAeI,QAAS,SAAAmB,GAAC,OAjInBmG,EAiIsCF,EAAKtC,IAjIjCb,EAAS,CAC1C9F,MAAM,EACN4F,aAAcuD,IAFK,IAAIA,IAiIkDF,EAAKrC,YAC1ElG,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAO9B,KAAM2F,EAAMC,eAAiBqD,EAAKtC,IAAK5E,OAAQgE,EAAc/D,WAAW,EAAMC,KAAK,KAAKC,kBAAgB,gCAAgCC,UAAQ,GACtJzB,EAAAC,EAAAC,cAACkB,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACxB3B,EAAAC,EAAAC,cAACkB,EAAA,EAAMQ,MAAP,iBAED5B,EAAAC,EAAAC,cAACkB,EAAA,EAAMS,KAAP,KACC7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMjB,GAAI0H,EAAKtC,KACdjG,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,mBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,MACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcyG,UAAQ,EAACxG,KAAK,OAAOC,YAAaoG,EAAKtC,IAAK7D,MAAOmG,EAAKtC,IAAKW,KAAK,UAGlF5G,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,sBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,SACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcyG,UAAQ,EAACxG,KAAK,OAAOC,YAAaoG,EAAKtF,MAAOb,MAAOmG,EAAKtF,MAAO2D,KAAK,YAGtF5G,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,YACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcyG,UAAQ,EAACxG,KAAK,WAAWC,YAAaoG,EAAKzI,SAAUsC,MAAOmG,EAAKzI,SAAU8G,KAAK,eAGhG5G,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,0BAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcyG,UAAQ,EAACxG,KAAK,OAAOC,YAAaoG,EAAKrC,WAAY9D,MAAOmG,EAAKrC,WAAYU,KAAK,iBAGhG5G,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,wBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,gBACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcyG,UAAQ,EAACxG,KAAK,OAAOC,YAAaoG,EAAKpC,aAAc/D,MAAOmG,EAAKpC,aAAcS,KAAK,mBAGpG5G,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,qBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,aACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcyG,UAAQ,EAACxG,KAAK,OAAOC,YAAaoG,EAAKnC,UAAWhE,MAAOmG,EAAKnC,UAAWQ,KAAK,gBAG9F5G,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,sBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcyG,UAAQ,EAACxG,KAAK,OAAOC,YAAaoG,EAAKlC,WAAYjE,MAAOmG,EAAKlC,WAAYO,KAAK,qBAOpG5G,EAAAC,EAAAC,cAAA,UAAKqI,EAAKtF,OACVjD,EAAAC,EAAAC,cAAA,UAAKqI,EAAKzI,UACVE,EAAAC,EAAAC,cAAA,UAAKqI,EAAKpC,cACVnG,EAAAC,EAAAC,cAAA,UAAKqI,EAAKnC,WACVpG,EAAAC,EAAAC,cAAA,UAAKqI,EAAKlC,YACVrG,EAAAC,EAAAC,cAAA,UAAKqI,EAAKI,iBACV3I,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAaC,aAAW,iBACvB3H,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQK,KAAK,KAAKhB,QAAQ,UAAUY,QAAS,SAAAmB,GAAC,OA3M7BmG,EA2M+CF,EAAKtC,IA3M1C1G,EAAQ,CACxCD,MAAM,EACNuF,YAAa4D,IAFK,IAAIA,IA2MjB,UACAzI,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAO9B,KAAMA,EAAKuF,cAAgB0D,EAAKtC,IAAK5E,OAAQ0D,EAAazD,WAAW,EAAMC,KAAK,KAAKC,kBAAgB,gCAAgCC,UAAQ,GACnJzB,EAAAC,EAAAC,cAACkB,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACxB3B,EAAAC,EAAAC,cAACkB,EAAA,EAAMQ,MAAP,gBAED5B,EAAAC,EAAAC,cAACkB,EAAA,EAAMS,KAAP,KACC7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMjB,GAAI0H,EAAKtC,IAAK2B,SAAU,SAAAtF,GAAC,OA9HlB,SAACA,EAAGsG,GACxBtG,EAAEkF,iBACF/E,QAAQC,IAAI6D,GAEZ,IAAIgC,EAAOM,SAASC,eAAeF,GAAQG,SAC3CtG,QAAQC,IAAI6F,EAAKtC,IAAI7D,OACrBK,QAAQC,IAAI6F,EAAKtF,MAAMb,OACvBK,QAAQC,IAAI6F,EAAKtF,MAAMd,aACvBM,QAAQC,IAAI6F,EAAKzI,SAASsC,OAC1BK,QAAQC,IAAI6F,EAAKrC,WAAW9D,OAC5BK,QAAQC,IAAI6F,EAAKpC,aAAa/D,OAC9BK,QAAQC,IAAI6F,EAAKnC,UAAUhE,OAC3BK,QAAQC,IAAI6F,EAAKlC,WAAWjE,OAC5BK,QAAQC,IAAI3D,EAAM,SAAWwJ,EAAKtC,IAAI7D,OAGtCO,IAAM,CACLC,OAAQ,OACR7D,IAAKA,EAAM,SAAWwJ,EAAKtC,IAAI7D,MAC/BS,KAAM,CACLoD,IAAKsC,EAAKtC,IAAI7D,MACda,MAA6B,KAArBsD,EAAWtD,MAAesF,EAAKtF,MAAMd,YAAcoE,EAAWtD,MACtEnD,SAAmC,KAAxByG,EAAWzG,SAAkByI,EAAKzI,SAASqC,YAAcoE,EAAWzG,SAC/EoG,WAAuC,KAA1BK,EAAWL,WAAoBqC,EAAKrC,WAAW/D,YAAcoE,EAAWL,WACrFC,aAA2C,KAA5BI,EAAWJ,aAAsBoC,EAAKpC,aAAahE,YAAcoE,EAAWJ,aAC3FC,UAAqC,KAAzBG,EAAWH,UAAmBmC,EAAKnC,UAAUjE,YAAcoE,EAAWH,UAClFC,WAAuC,KAA1BE,EAAWF,WAAoBkC,EAAKlC,WAAWlE,YAAcoE,EAAWF,cAGtFvD,KAAK,SAAAC,GACc,MAAfA,EAAIC,QACPP,QAAQC,IAAI,kBACZY,OAAOC,SAASC,WAEhBf,QAAQC,IAAI,iBAEZY,OAAOC,SAASC,YAGjBC,MAAM,SAAAC,GACNjB,QAAQC,IAAIgB,GACZJ,OAAOC,SAASC,WAqFyBwF,CAAa1G,EAAGiG,EAAKtC,OACvDjG,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,mBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,MACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcyG,UAAQ,EAACxG,KAAK,OAAOC,YAAaoG,EAAKtC,IAAK7D,MAAOmG,EAAKtC,IAAKW,KAAK,UAGlF5G,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,sBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,SACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAaoG,EAAKtF,MAAOb,MAAOmE,EAAWtD,MAAO2D,KAAK,QAAQvE,SAAU,SAAAC,GAAC,OAAImE,EAAYnE,QAGtHtC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,YACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,WAAWC,YAAaoG,EAAKzI,SAAUsC,MAAOmE,EAAWzG,SAAU8G,KAAK,WAAWvE,SAAU,SAAAC,GAAC,OAAImE,EAAYnE,QAGnItC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,0BAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAaoG,EAAKrC,WAAY9D,MAAOmE,EAAWL,WAAYU,KAAK,aAAavE,SAAU,SAAAC,GAAC,OAAImE,EAAYnE,QAGrItC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,wBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,gBACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAaoG,EAAKpC,aAAc/D,MAAOmE,EAAWJ,aAAcS,KAAK,eAAevE,SAAU,SAAAC,GAAC,OAAImE,EAAYnE,QAG3ItC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,qBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,aACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAaoG,EAAKnC,UAAWhE,MAAOmE,EAAWH,UAAWQ,KAAK,YAAYvE,SAAU,SAAAC,GAAC,OAAImE,EAAYnE,QAGlItC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,sBAC9BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACPjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAaoG,EAAKlC,WAAYjE,MAAOmE,EAAWF,WAAYO,KAAK,aAAavE,SAAU,SAAAC,GAAC,OAAImE,EAAYnE,UAKvItC,EAAAC,EAAAC,cAACkB,EAAA,EAAMoB,OAAP,KACCxC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQiH,KAAMI,EAAKtC,IAAK/D,KAAK,SAAS3B,QAAQ,WAA9C,aAIHP,EAAAC,EAAAC,cAACwH,EAAA,EAAD,KACC1H,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQK,KAAK,KAAKhB,QAAQ,SAASY,QAAS,SAAAmB,GAAC,OAhOtBmG,EAgO8CF,EAAKtC,IAhOzCH,EAAc,CACpDH,YAAY,EACZC,aAAc6C,IAFU,IAAIA,IAgOvB,UACAzI,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAO9B,KAAMqG,EAAWC,eAAiB2C,EAAKtC,IAAK5E,OAAQ0E,EAAmBzE,WAAW,EAAMC,KAAK,KAAKC,kBAAgB,gCAAgCC,UAAQ,GAChKzB,EAAAC,EAAAC,cAACkB,EAAA,EAAMM,OAAP,CAAcnB,QAAQ,SAASoB,aAAW,EAACrB,GAAG,UAC7CN,EAAAC,EAAAC,cAACkB,EAAA,EAAMQ,MAAP,gBAED5B,EAAAC,EAAAC,cAACkB,EAAA,EAAMS,KAAP,KACC7B,EAAAC,EAAAC,cAAA,2BAAmBqI,EAAKtF,QAEzBjD,EAAAC,EAAAC,cAACkB,EAAA,EAAMoB,OAAP,KACCxC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQgB,KAAK,SAAS3B,QAAQ,SAASY,QAAS,SAAAmB,GAAC,OAhOhCzB,EAgOoD0H,EAAKtC,IA/NjFxD,QAAQC,IAAI7B,GACZ4B,QAAQC,IAAI3D,EAAM,WAAa8B,QAC/B8B,IAAM,CACLC,OAAQ,OACR7D,IAAKA,EAAM,WAAa8B,EACxBoI,MAAO,CACNC,GAAIrI,KAGJiC,KAAK,SAAAC,GACLN,QAAQC,IAAIK,GACO,MAAfA,EAAIC,QACPP,QAAQC,IAAI,kBACZY,OAAOC,SAASC,WAEhBf,QAAQC,IAAI,iBACZY,OAAOC,SAASC,YAGjBC,MAAM,SAAAC,GACNjB,QAAQC,IAAIgB,GACZJ,OAAOC,SAASC,WAtBnB,IAAyB3C,IAgOjB,wBCxRYsI,mLAMb,OACInJ,EAAAC,EAAAC,cAAA,OAAK8D,MALK,CACVC,SAAU,WAAYC,KAAM,MAAOC,IAAK,MACxCC,UAAW,0BAIPpE,EAAAC,EAAAC,cAAA,wDARmB2D,IAAMC,oBCGzC,SAASsF,IAEL,OAAGlG,aAAamB,QAAQ,cACbrE,EAAAC,EAAAC,cAACqE,EAAD,MAEAvE,EAAAC,EAAAC,cAACmJ,EAAD,UAcAC,mLARP,OACItJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAWC,OAAK,GACZxJ,EAAAC,EAAAC,cAACkJ,EAAD,cAJItF,inBCNL,SAASS,IACpB,IAAIxF,EAAmF,0DADtDyF,EAGPX,IAAM3E,SAAS,IAHRuF,EAAArF,OAAAC,EAAA,EAAAD,CAAAoF,EAAA,GAG1BE,EAH0BD,EAAA,GAGnBE,EAHmBF,EAAA,GAAAG,EAKTf,IAAM3E,SAAS,CACnCI,MAAM,EACNuF,YAAa,OAPgBC,EAAA1F,OAAAC,EAAA,EAAAD,CAAAwF,EAAA,GAAAI,GAAAF,EAAA,GAAAA,EAAA,GAkBPjB,IAAM3E,SAAS,CACrC+F,OAAO,EACPC,aAAc,QApBeC,EAAA/F,OAAAC,EAAA,EAAAD,CAAA4F,EAAA,GAAAG,EAAA,GAAAA,EAAA,GAgCjCtB,IAAMyB,UAAU,WACZC,MAAMxG,GACD+D,KAAK,SAAA0C,GAAO,OAAIA,EAAQC,SACxB3C,KAAK,SAAA4B,GACFC,EAASD,MAGlB,CAAC3F,IAvC6B,IAAA2G,EAyCG7B,IAAM3E,SAAS,CAC/CyG,YAAY,EACZC,aAAc,OA3CeC,EAAAzG,OAAAC,EAAA,EAAAD,CAAAsG,EAAA,GAAAG,EAAA,GAAAA,EAAA,OAAAG,EAiFGnC,IAAM3E,SAAS,CAC/C+G,IAAK,GACLhD,MAAO,GACPnD,SAAU,GACVoG,WAAY,GACZC,aAAc,GACdC,UAAW,GACXC,WAAY,KAxFiBC,EAAAlH,OAAAC,EAAA,EAAAD,CAAA4G,EAAA,GAAAa,GAAAP,EAAA,GAAAA,EAAA,GAkSGzC,IAAM3E,UAAS,IAlSlB4H,EAAA1H,OAAAC,EAAA,EAAAD,CAAAyH,EAAA,GAkS1BE,EAlS0BD,EAAA,GAkSdE,EAlScF,EAAA,GAoS3BG,EAAmB,WACrBD,GAAc,IAEZE,EAAoB,WACtBF,GAAc,IAxSeG,EA2SHtD,IAAM3E,SAAS,CACzC+G,IAAK,GACLhD,MAAO,GACPnD,SAAU,GACVoG,WAAY,GACZC,aAAc,GACdC,UAAW,GACXC,WAAY,KAlTiBe,EAAAhI,OAAAC,EAAA,EAAAD,CAAA+H,EAAA,GA2S1BE,EA3S0BD,EAAA,GA2SjBE,EA3SiBF,EAAA,GAqT3BG,EAAe,SAAAjF,GACjBA,EAAEkF,iBACF/E,QAAQC,IAAI2E,GAEZ1E,IAAM,CACFC,OAAQ,OACR7D,IAAKA,EAAM,YACX8D,KAAM,CACFI,MAAOoE,EAAQpE,MACfnD,SAAUuH,EAAQvH,SAClBoG,WAAYmB,EAAQnB,WACpBC,aAAckB,EAAQlB,aACtBC,UAAWiB,EAAQjB,UACnBC,WAAYgB,EAAQhB,cAGvBvD,KAAK,SAAAC,GACiB,MAAfA,EAAIC,QACJP,QAAQC,IAAI,kBACZY,OAAOC,SAASC,WAEhBf,QAAQC,IAAI,iBACZY,OAAOC,SAASC,YAGvBC,MAAM,SAAAC,GACHjB,QAAQC,IAAIgB,MAIlB+D,EAAc,SAAAnF,GAChBgF,EAAWmC,EAAA,GACJpC,EADGjI,OAAAuH,EAAA,EAAAvH,CAAA,GAELkD,EAAEC,OAAOqE,KAAOtE,EAAEC,OAAOH,UA2GZsH,SAAdC,UAER,OACI3J,EAAAC,EAAAC,cAAA,WAxGIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAaC,aAAW,iBACpB3H,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQK,KAAK,KAAKhB,QAAQ,UAAUY,QAAS8F,GAA7C,UACAjH,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAO9B,KAAMyH,EAAY1F,OAAQ6F,EAAmB5F,WAAW,EAAMC,KAAK,KAAKC,kBAAgB,gCAAgCC,UAAQ,GACnIzB,EAAAC,EAAAC,cAACkB,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACrB3B,EAAAC,EAAAC,cAACkB,EAAA,EAAMQ,MAAP,gBAEJ5B,EAAAC,EAAAC,cAACkB,EAAA,EAAMS,KAAP,KACI7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMjB,GAAG,aAAa+G,SAAUL,GAC5BvH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,sBAC3BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,SACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACJjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,oBAAoBC,MAAOiF,EAAQpE,MAAO2D,KAAK,QAAQvE,SAAUoF,MAG/GzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC3BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,YACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACJjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,WAAWC,YAAY,GAAGC,MAAOiF,EAAQvH,SAAU8G,KAAK,WAAWvE,SAAUoF,MAGxGzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC3BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACJjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGC,MAAOiF,EAAQnB,WAAYU,KAAK,aAAavE,SAAUoF,MAGxGzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC3BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,gBACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACJjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGC,MAAOiF,EAAQlB,aAAcS,KAAK,eAAevE,SAAUoF,MAG5GzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC3BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,aACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACJjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGC,MAAOiF,EAAQjB,UAAWQ,KAAK,YAAYvE,SAAUoF,MAGtGzH,EAAAC,EAAAC,cAAC4B,EAAA,EAAKC,MAAN,CAAY8F,GAAIC,IAAK9F,UAAU,yBAC3BhC,EAAAC,EAAAC,cAAC4B,EAAA,EAAKiG,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,cACAjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAKD,GAAG,MACJjI,EAAAC,EAAAC,cAAC4B,EAAA,EAAKG,QAAN,CAAcC,KAAK,OAAOC,YAAY,GAAGC,MAAOiF,EAAQhB,WAAYO,KAAK,aAAavE,SAAUoF,QAKhHzH,EAAAC,EAAAC,cAACkB,EAAA,EAAMoB,OAAP,KACIxC,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAQiH,KAAK,aAAajG,KAAK,SAAS3B,QAAQ,WAAhD,cA0DhBP,EAAAC,EAAAC,cAAC0J,EAAA3J,EAAD,CACI4J,YAAU,EACVC,UAAQ,EACRC,SAAS,KACTlH,KAAM6B,EACNsF,QAvDI,CAAC,CACbC,UAAW,MACXC,KAAM,KACNC,MAAM,GACP,CACCF,UAAW,aACXC,KAAM,aACNC,MAAM,GACP,CACCF,UAAW,QACXC,KAAM,QACNC,MAAM,GACP,CACCF,UAAW,WACXC,KAAM,WACNC,MAAM,GACP,CACCF,UAAW,eACXC,KAAM,eACNC,MAAM,GACP,CACCF,UAAW,YACXC,KAAM,YACNC,MAAM,GACP,CACCF,UAAW,aACXC,KAAM,aACNC,MAAM,GACP,CACCF,UAAW,kBACXC,KAAM,kBACNC,MAAM,GACP,CACCF,UAAW,aACXC,KAAM,aACNC,MAAM,IAqBEC,cAlBU,CAClB,CACIH,UAAW,OACXI,MAAO,SAgBHC,SAAUC,IAAgB,CACtBC,KAAM,QACNC,YAAY,OCldhC,SAASrB,IAEL,OAAGlG,aAAamB,QAAQ,cACbrE,EAAAC,EAAAC,cAACwK,EAAD,MAEA1K,EAAAC,EAAAC,cAACmJ,EAAD,UAcAC,mLARP,OACItJ,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAWC,OAAK,GACZxJ,EAAAC,EAAAC,cAACyK,EAAD,cAJI7G,aCYL8G,MAff,WACE,OACE5K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2K,EAAD,MACA7K,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,KACE9K,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3G,IACjCtE,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAW3G,IAC/BtE,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW3B,IAChCtJ,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWC,IACjClL,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW9B,OCRpBgC,QACW,cAA7B7H,OAAOC,SAAS6H,UAEe,UAA7B9H,OAAOC,SAAS6H,UAEhB9H,OAAOC,SAAS6H,SAASC,MACvB,qFCNNC,IAASC,OACLvL,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAYpI,QAASA,GACjBpD,EAAAC,EAAAC,cAACuL,EAAD,OACW5C,SAASC,eAAe,SDkHrC,kBAAmB4C,WACrBA,UAAUC,cAAcC,MAAM9I,KAAK,SAAA+I,GACjCA,EAAaC","file":"static/js/main.06707503.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory({\r\n    forceRefresh: true\r\n});","import React, { useState } from 'react';\r\nimport { Navbar, Nav, Button, ButtonToolbar, Modal, Form } from 'react-bootstrap';\r\nimport history from '../Pages/History';\r\nimport axios from 'axios'; // axios is a http request module\r\n\r\nlet url = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api/users' : \"https://windows-pwa-express.azurewebsites.net/api/users\"\r\n\r\nfunction Navbarfunc() {\r\n\tconst [show, setShow] = useState(false); // React 16.8.0 is using state hook to replace the component mount life circle\r\n\r\n\tconst handleShow = () => setShow(true); // This is for poping up the login page\r\n\tconst handleClose = () => setShow(false);\r\n\r\n\tconst [username, setUsername] = useState(''); // set default value to empty and fetch data from input box\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tconst handleSingin = () => {\r\n\t\tsetShow(false);\r\n\t\tconsole.log(username);\r\n\t\tconsole.log(password);\r\n\r\n\t\taxios({ \t\t\t\t// send POST request to Express API\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: url + '/login',\r\n\t\t\tdata: {\r\n\t\t\t\tusername: username,\r\n\t\t\t\tpassword: password\r\n \t\t\t }\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(res.status === 200){\r\n\t\t\t\t\tconsole.log(res.data.email); // login success\r\n\t\t\t\t\tlocalStorage.setItem('loginemail', res.data.email); // store the user email in browser storage\r\n\t\t\t\t\thistory.push('/#/home'); \t// route to home page \r\n\t\t\t\t\twindow.location.reload();\t// refresh teh page\r\n\t\t\t\t} else {\r\n\t\t\t\t\thistory.push('/#/home');\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\thistory.push('/#/error');\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst handleSingout = () => {\r\n\t\t// console.log('handleSingout');\r\n\t\tlocalStorage.clear();\t// clear user email information when clicking signout\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t<Navbar.Brand href=\"#home\">Express React MongoDB</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t<Nav.Link href=\"#home\">Home</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"#users\">Users</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"#users2\">Users2</Nav.Link>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t\t<Button variant=\"info\" onClick={handleShow}>Signin</Button>\r\n\t\t\t\t\t\t\t{/* pop out modal for user login */}\r\n\t\t\t\t\t\t\t<Modal show={show} onHide={handleClose} animation={true} size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n\t\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t<Modal.Title>Modal heading</Modal.Title>\r\n\t\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicUsername\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t<Button type='button' variant=\"primary\" onClick={handleSingin}>\r\n\t\t\t\t\t\t\t\t\t\tGo\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t\t<Button variant=\"light\" onClick={handleSingout}>Signout</Button>\r\n\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default class NavbarTop extends React.Component {\r\n\trender() {\r\n\t\treturn ( \r\n\t\t\t\t<Navbarfunc />\t// invoke the function as a component\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction GetUsername() {\r\n    // const [username, setUsername] = useState('');\r\n\r\n    let style = {\r\n        position: 'absolute', left: '50%', top: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            <h3>Welcome {localStorage.getItem('loginemail')}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <GetUsername />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Table, Button, ButtonGroup, Modal, Form, Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios'; // axios is a http request module\r\n\r\nexport default function UsersTable() {\r\n\tlet url = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api/users' : \"https://windows-pwa-express.azurewebsites.net/api/users\"\r\n\r\n\tconst [users, setUsers] = React.useState([]);\r\n\t// modify button modal\r\n\tconst [show, setShow] = React.useState({\r\n\t\tshow: false,\r\n\t\tactiveModal: null\r\n\t});\r\n\tconst handleShow = (e, index) => setShow({\r\n\t\tshow: true,\r\n\t\tactiveModal: index,\r\n\t});\r\n\tconst handleClose = () => setShow({\r\n\t\tshow: false,\r\n\t\tactiveModal: null,\r\n\t});\r\n\r\n\tconst [show0, setShow0] = React.useState({\r\n\t\tshow0: false,\r\n\t\tactiveModal0: null\r\n\t});\r\n\tconst handleShow0 = (e, index) => setShow0({\r\n\t\tshow: true,\r\n\t\tactiveModal0: index,\r\n\t});\r\n\tconst handleClose0 = () => setShow0({\r\n\t\tshow: false,\r\n\t\tactiveModal0: null,\r\n\t});\r\n\r\n\t// use react hook to fetch all the user data from Express API\r\n\tReact.useEffect(() => {\r\n\t\tfetch(url)\r\n\t\t\t.then(results => results.json())\r\n\t\t\t.then(users => {\r\n\t\t\t\tsetUsers(users);\r\n\t\t\t\t// console.log(users);\r\n\t\t\t});\r\n\t}, [url]);\r\n\t// handle delete record.\r\n\tconst [showdelete, SetShowdelete] = React.useState({\r\n\t\tshowdelete: false,\r\n\t\tactivedelete: null\r\n\t});\r\n\tconst handleShowdelete = (e, index) => SetShowdelete({\r\n\t\tshowdelete: true,\r\n\t\tactivedelete: index\r\n\t});\r\n\tconst handleClosedelete = () => SetShowdelete({\r\n\t\tshowdelete: false,\r\n\t\tactivedelete: null\r\n\t});\r\n\t// send request to express delete api and delete the data due to Mongo index ID. findByIdAndRemove()\r\n\tfunction deleteRecord(e, id) {\r\n\t\tconsole.log(id);\r\n\t\tconsole.log(url + '/delete/' + id);\r\n\t\taxios({ \t\t\t\t// send POST request to the delete api\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: url + '/delete/' + id,\r\n\t\t\tquery: {\r\n\t\t\t\tId: id,\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tconsole.log(res);\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tconsole.log(\"delete success\"); // login success\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"delete failed\");\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t}\r\n\r\n\t// set from info\r\n\tconst [modifyuser, setModifyuser] = React.useState({\r\n\t\t_id:'',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tfirst_name: '',\r\n\t\tcountry_name: '',\r\n\t\tcity_name: '',\r\n\t\tstate_name: '',\r\n\t})\r\n\r\n\t// create form submit\r\n\tconst modifyRecord = (e, userid) => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(modifyuser);\r\n\r\n\t\tvar user = document.getElementById(userid).elements;\r\n\t\tconsole.log(user._id.value);\r\n\t\tconsole.log(user.email.value);\r\n\t\tconsole.log(user.email.placeholder);\r\n\t\tconsole.log(user.password.value);\r\n\t\tconsole.log(user.first_name.value);\r\n\t\tconsole.log(user.country_name.value);\r\n\t\tconsole.log(user.city_name.value);\r\n\t\tconsole.log(user.state_name.value);\r\n\t\tconsole.log(url + '/edit/' + user._id.value);\r\n\t\t\r\n\t\t// axios call to express create user\r\n\t\taxios({\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: url + '/edit/' + user._id.value,\r\n\t\t\tdata: {\r\n\t\t\t\t_id: user._id.value,\r\n\t\t\t\temail: (modifyuser.email === \"\")? user.email.placeholder : modifyuser.email,\r\n\t\t\t\tpassword: (modifyuser.password === \"\")? user.password.placeholder : modifyuser.password,\r\n\t\t\t\tfirst_name: (modifyuser.first_name === \"\")? user.first_name.placeholder : modifyuser.first_name,\r\n\t\t\t\tcountry_name: (modifyuser.country_name === \"\")? user.country_name.placeholder : modifyuser.country_name,\r\n\t\t\t\tcity_name: (modifyuser.city_name === \"\")? user.city_name.placeholder : modifyuser.city_name,\r\n\t\t\t\tstate_name: (modifyuser.state_name === \"\")? user.state_name.placeholder : modifyuser.state_name,\r\n\t\t\t}\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tconsole.log(\"modify success\");\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"modify failed\");\r\n\t\t\t\t// history.push('/#/error');\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t\twindow.location.reload();\r\n\t\t})\r\n\t};\r\n\t// match form name properity with the input value\r\n\tconst updateValue = (e) => {\r\n\t\tconsole.log(e.target.value);\r\n\t\tsetModifyuser({\r\n\t\t\t...modifyuser,\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst renderTable = () => {\r\n\t\treturn users.map((user) => {\r\n\t\t\t// console.log(user);\r\n\t\t\treturn (\r\n\t\t\t\t<tr key={user._id}>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<p className=\"text-primary\" onClick={e => handleShow0(e, user._id)}>{user.first_name}</p>\r\n\t\t\t\t\t\t<Modal show={show0.activeModal0 === user._id} onHide={handleClose0} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t<Modal.Title>Details</Modal.Title>\r\n\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t<Form id={user._id}>\r\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextId\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user._id} value={user._id} name=\"_id\" />\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.email} value={user.email} name=\"email\" />\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='password' placeholder={user.password} value={user.password} name=\"password\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextFirstName\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">First Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.first_name} value={user.first_name} name=\"first_name\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextCountry\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Country Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.country_name} value={user.country_name} name=\"country_name\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextCity\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">City Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.city_name} value={user.city_name} name=\"city_name\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextState\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">State Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user.state_name} value={user.state_name} name=\"state_name\"/>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>{user.email}</td>\r\n\t\t\t\t\t<td>{user.password}</td>\r\n\t\t\t\t\t<td>{user.country_name}</td>\r\n\t\t\t\t\t<td>{user.city_name}</td>\r\n\t\t\t\t\t<td>{user.state_name}</td>\r\n\t\t\t\t\t<td>{user.company_address}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<ButtonGroup aria-label=\"Basic example\">\r\n\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"primary\" onClick={e => handleShow(e, user._id)}>Modify</Button>\r\n\t\t\t\t\t\t\t<Modal show={show.activeModal === user._id} onHide={handleClose} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n\t\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t<Modal.Title>Modify</Modal.Title>\r\n\t\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t\t<Form id={user._id} onSubmit={e => modifyRecord(e, user._id)}>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextId\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control readOnly type='text' placeholder={user._id} value={user._id} name=\"_id\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.email} value={modifyuser.email} name=\"email\" onChange={e => updateValue(e)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='password' placeholder={user.password} value={modifyuser.password} name=\"password\" onChange={e => updateValue(e)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextFirstName\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">First Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.first_name} value={modifyuser.first_name} name=\"first_name\" onChange={e => updateValue(e)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextCountry\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Country Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.country_name} value={modifyuser.country_name} name=\"country_name\" onChange={e => updateValue(e)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextCity\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">City Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.city_name} value={modifyuser.city_name} name=\"city_name\" onChange={e => updateValue(e)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextState\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">State Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder={user.state_name} value={modifyuser.state_name} name=\"state_name\" onChange={e => updateValue(e)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t<Button form={user._id} type='submit' variant=\"primary\" >Submit</Button>\r\n\t\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t\t\t<Button size=\"sm\" variant=\"danger\" onClick={e => handleShowdelete(e, user._id)}>Delete</Button>\r\n\t\t\t\t\t\t\t<Modal show={showdelete.activedelete === user._id} onHide={handleClosedelete} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n\t\t\t\t\t\t\t\t<Modal.Header variant=\"danger\" closeButton bg=\"danger\">\r\n\t\t\t\t\t\t\t\t\t<Modal.Title>Delete</Modal.Title>\r\n\t\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t\t<p>user email is: {user.email}</p>\r\n\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t<Button type='button' variant=\"danger\" onClick={e => deleteRecord(e, user._id)}>Delete</Button>\r\n\t\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t// create record\r\n\tconst [showcreate, setShowcreate] = React.useState(false);\r\n\r\n\tconst handleShowcreate = () => {\r\n\t\tsetShowcreate(true);\r\n\t}\r\n\tconst handleClosecreate = () => {\r\n\t\tsetShowcreate(false);\r\n\t}\r\n\t// set from info\r\n\tconst [newuser, setNewuser] = React.useState({\r\n\t\t_id:'',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tfirst_name: '',\r\n\t\tcountry_name: '',\r\n\t\tcity_name: '',\r\n\t\tstate_name: '',\r\n\t})\r\n\t// create form submit\r\n\tconst createRecord = e => {\r\n\t\te.preventDefault();\r\n\t\tconsole.log(newuser);\r\n\t\t// axios call to express create user\r\n\t\taxios({\r\n\t\t\tmethod: 'POST',\r\n\t\t\turl: url + '/register',\r\n\t\t\tdata: {\r\n\t\t\t\temail: newuser.email,\r\n\t\t\t\tpassword: newuser.password,\r\n\t\t\t\tfirst_name: newuser.first_name,\r\n\t\t\t\tcountry_name: newuser.country_name,\r\n\t\t\t\tcity_name: newuser.city_name,\r\n\t\t\t\tstate_name: newuser.state_name,\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\tconsole.log(\"create success\");\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"create failed\");\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t})\r\n\t};\r\n\t// match form name properity with the input value\r\n\tconst updateField = e => {\r\n\t\tsetNewuser({\r\n\t\t\t...newuser,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tconst createData = () => {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ButtonGroup aria-label=\"Basic example\">\r\n\t\t\t\t\t<Button size=\"lg\" variant=\"success\" onClick={handleShowcreate}>Create</Button>\r\n\t\t\t\t\t<Modal show={showcreate} onHide={handleClosecreate} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Create</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form id='createuser' onSubmit={createRecord}>\r\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"sample@sample.com\" value={newuser.email} name=\"email\" onChange={updateField}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='password' placeholder=\"\" value={newuser.password} name=\"password\" onChange={updateField}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">First Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"\" value={newuser.first_name} name=\"first_name\" onChange={updateField}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">Country Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"\" value={newuser.country_name} name=\"country_name\" onChange={updateField}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">City Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"\" value={newuser.city_name} name=\"city_name\" onChange={updateField}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label column sm=\"2\">State Name</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm=\"10\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type='text' placeholder=\"\" value={newuser.state_name} name=\"state_name\" onChange={updateField}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button form='createuser' type='submit' variant=\"success\" >Submit</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{createData()}\r\n\t\t\t<Table responsive >\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>First_name</th>\r\n\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t<th>Password</th>\r\n\t\t\t\t\t\t<th>Country_name</th>\r\n\t\t\t\t\t\t<th>city_name</th>\r\n\t\t\t\t\t\t<th>state_name</th>\r\n\t\t\t\t\t\t<th>company_address</th>\r\n\t\t\t\t\t\t<th>Operations</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{renderTable()}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\n// https://medium.com/@BogdanSoare/how-to-use-reacts-new-context-api-to-easily-manage-modals-2ae45c7def81","import React from 'react';\r\n\r\nexport default class Error extends React.Component {\r\n    render() {\r\n        const style = {\r\n            position: 'absolute', left: '50%', top: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }\r\n        return (\r\n            <div style={style}>\r\n                <h3>Sorry, this site is for Admin only</h3>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport UsetsTable from './UsersTable';\r\nimport Error from './Error';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction CheckLogin() {\r\n    // check if use email is stored in browser, if so then user has logged in and redirect to home page\r\n    if(localStorage.getItem('loginemail')){ \r\n        return <UsetsTable />\r\n    } else {\r\n        return <Error />       // user not logged in, redirect to error page\r\n    }\r\n}\r\n\r\nclass Users extends Component{\r\n    render(){\r\n        return(\r\n            <Container fluid>\r\n                <CheckLogin />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { Table, Button, ButtonGroup, Modal, Form, Row, Col } from 'react-bootstrap';\r\nimport axios from 'axios'; // axios is a http request module\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport './UserTable2.css'\r\n\r\nexport default function UsersTable() {\r\n    let url = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api/users' : \"https://windows-pwa-express.azurewebsites.net/api/users\"\r\n\r\n    const [users, setUsers] = React.useState([]);\r\n    // modify button modal\r\n    const [show, setShow] = React.useState({\r\n        show: false,\r\n        activeModal: null\r\n    });\r\n    const handleShow = (e, index) => setShow({\r\n        show: true,\r\n        activeModal: index,\r\n    });\r\n    const handleClose = () => setShow({\r\n        show: false,\r\n        activeModal: null,\r\n    });\r\n\r\n    const [show0, setShow0] = React.useState({\r\n        show0: false,\r\n        activeModal0: null\r\n    });\r\n    const handleShow0 = (e, index) => setShow0({\r\n        show: true,\r\n        activeModal0: index,\r\n    });\r\n    const handleClose0 = () => setShow0({\r\n        show: false,\r\n        activeModal0: null,\r\n    });\r\n\r\n    // use react hook to fetch all the user data from Express API\r\n    React.useEffect(() => {\r\n        fetch(url)\r\n            .then(results => results.json())\r\n            .then(users => {\r\n                setUsers(users);\r\n                // console.log(users);\r\n            });\r\n    }, [url]);\r\n    // handle delete record.\r\n    const [showdelete, SetShowdelete] = React.useState({\r\n        showdelete: false,\r\n        activedelete: null\r\n    });\r\n    const handleShowdelete = (e, index) => SetShowdelete({\r\n        showdelete: true,\r\n        activedelete: index\r\n    });\r\n    const handleClosedelete = () => SetShowdelete({\r\n        showdelete: false,\r\n        activedelete: null\r\n    });\r\n    // send request to express delete api and delete the data due to Mongo index ID. findByIdAndRemove()\r\n    function deleteRecord(e, id) {\r\n        console.log(id);\r\n        console.log(url + '/delete/' + id);\r\n        axios({ \t\t\t\t// send POST request to the delete api\r\n            method: 'post',\r\n            url: url + '/delete/' + id,\r\n            query: {\r\n                Id: id,\r\n            }\r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.status === 200) {\r\n                    console.log(\"delete success\"); // login success\r\n                    window.location.reload();\r\n                } else {\r\n                    console.log(\"delete failed\");\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                window.location.reload();\r\n            })\r\n    }\r\n\r\n    // set from info\r\n    const [modifyuser, setModifyuser] = React.useState({\r\n        _id: '',\r\n        email: '',\r\n        password: '',\r\n        first_name: '',\r\n        country_name: '',\r\n        city_name: '',\r\n        state_name: '',\r\n    })\r\n\r\n    // create form submit\r\n    const modifyRecord = (e, userid) => {\r\n        e.preventDefault();\r\n        console.log(modifyuser);\r\n\r\n        var user = document.getElementById(userid).elements;\r\n        console.log(user._id.value);\r\n        console.log(user.email.value);\r\n        console.log(user.email.placeholder);\r\n        console.log(user.password.value);\r\n        console.log(user.first_name.value);\r\n        console.log(user.country_name.value);\r\n        console.log(user.city_name.value);\r\n        console.log(user.state_name.value);\r\n        console.log(url + '/edit/' + user._id.value);\r\n\r\n        // axios call to express create user\r\n        axios({\r\n            method: 'post',\r\n            url: url + '/edit/' + user._id.value,\r\n            data: {\r\n                _id: user._id.value,\r\n                email: (modifyuser.email === \"\") ? user.email.placeholder : modifyuser.email,\r\n                password: (modifyuser.password === \"\") ? user.password.placeholder : modifyuser.password,\r\n                first_name: (modifyuser.first_name === \"\") ? user.first_name.placeholder : modifyuser.first_name,\r\n                country_name: (modifyuser.country_name === \"\") ? user.country_name.placeholder : modifyuser.country_name,\r\n                city_name: (modifyuser.city_name === \"\") ? user.city_name.placeholder : modifyuser.city_name,\r\n                state_name: (modifyuser.state_name === \"\") ? user.state_name.placeholder : modifyuser.state_name,\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    console.log(\"modify success\");\r\n                    window.location.reload();\r\n                } else {\r\n                    console.log(\"modify failed\");\r\n                    // history.push('/#/error');\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                window.location.reload();\r\n            })\r\n    };\r\n    // match form name properity with the input value\r\n    const updateValue = (e) => {\r\n        console.log(e.target.value);\r\n        setModifyuser({\r\n            ...modifyuser,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const renderTable = () => {\r\n        return users.map((user) => {\r\n            // console.log(user);\r\n            return (\r\n                <tr key={user._id}>\r\n                    <td>\r\n                        <p className=\"text-primary\" onClick={e => handleShow0(e, user._id)}>{user.first_name}</p>\r\n                        <Modal show={show0.activeModal0 === user._id} onHide={handleClose0} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Details</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Form id={user._id}>\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextId\">\r\n                                        <Form.Label column sm=\"2\">ID</Form.Label>\r\n                                        <Col sm=\"10\">\r\n                                            <Form.Control readOnly type='text' placeholder={user._id} value={user._id} name=\"_id\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                        <Form.Label column sm=\"2\">Email</Form.Label>\r\n                                        <Col sm=\"10\">\r\n                                            <Form.Control readOnly type='text' placeholder={user.email} value={user.email} name=\"email\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                        <Form.Label column sm=\"2\">Password</Form.Label>\r\n                                        <Col sm=\"10\">\r\n                                            <Form.Control readOnly type='password' placeholder={user.password} value={user.password} name=\"password\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextFirstName\">\r\n                                        <Form.Label column sm=\"2\">First Name</Form.Label>\r\n                                        <Col sm=\"10\">\r\n                                            <Form.Control readOnly type='text' placeholder={user.first_name} value={user.first_name} name=\"first_name\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextCountry\">\r\n                                        <Form.Label column sm=\"2\">Country Name</Form.Label>\r\n                                        <Col sm=\"10\">\r\n                                            <Form.Control readOnly type='text' placeholder={user.country_name} value={user.country_name} name=\"country_name\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextCity\">\r\n                                        <Form.Label column sm=\"2\">City Name</Form.Label>\r\n                                        <Col sm=\"10\">\r\n                                            <Form.Control readOnly type='text' placeholder={user.city_name} value={user.city_name} name=\"city_name\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Row} controlId=\"formPlaintextState\">\r\n                                        <Form.Label column sm=\"2\">State Name</Form.Label>\r\n                                        <Col sm=\"10\">\r\n                                            <Form.Control readOnly type='text' placeholder={user.state_name} value={user.state_name} name=\"state_name\" />\r\n                                        </Col>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </Modal.Body>\r\n                        </Modal>\r\n                    </td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.password}</td>\r\n                    <td>{user.country_name}</td>\r\n                    <td>{user.city_name}</td>\r\n                    <td>{user.state_name}</td>\r\n                    <td>{user.company_address}</td>\r\n                    <td>\r\n                        <ButtonGroup aria-label=\"Basic example\">\r\n                            <Button size=\"sm\" variant=\"primary\" onClick={e => handleShow(e, user._id)}>Modify</Button>\r\n                            <Modal show={show.activeModal === user._id} onHide={handleClose} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Modify</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <Form id={user._id} onSubmit={e => modifyRecord(e, user._id)}>\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextId\">\r\n                                            <Form.Label column sm=\"2\">ID</Form.Label>\r\n                                            <Col sm=\"10\">\r\n                                                <Form.Control readOnly type='text' placeholder={user._id} value={user._id} name=\"_id\" />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                            <Form.Label column sm=\"2\">Email</Form.Label>\r\n                                            <Col sm=\"10\">\r\n                                                <Form.Control type='text' placeholder={user.email} value={modifyuser.email} name=\"email\" onChange={e => updateValue(e)} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                            <Form.Label column sm=\"2\">Password</Form.Label>\r\n                                            <Col sm=\"10\">\r\n                                                <Form.Control type='password' placeholder={user.password} value={modifyuser.password} name=\"password\" onChange={e => updateValue(e)} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextFirstName\">\r\n                                            <Form.Label column sm=\"2\">First Name</Form.Label>\r\n                                            <Col sm=\"10\">\r\n                                                <Form.Control type='text' placeholder={user.first_name} value={modifyuser.first_name} name=\"first_name\" onChange={e => updateValue(e)} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextCountry\">\r\n                                            <Form.Label column sm=\"2\">Country Name</Form.Label>\r\n                                            <Col sm=\"10\">\r\n                                                <Form.Control type='text' placeholder={user.country_name} value={modifyuser.country_name} name=\"country_name\" onChange={e => updateValue(e)} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextCity\">\r\n                                            <Form.Label column sm=\"2\">City Name</Form.Label>\r\n                                            <Col sm=\"10\">\r\n                                                <Form.Control type='text' placeholder={user.city_name} value={modifyuser.city_name} name=\"city_name\" onChange={e => updateValue(e)} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Row} controlId=\"formPlaintextState\">\r\n                                            <Form.Label column sm=\"2\">State Name</Form.Label>\r\n                                            <Col sm=\"10\">\r\n                                                <Form.Control type='text' placeholder={user.state_name} value={modifyuser.state_name} name=\"state_name\" onChange={e => updateValue(e)} />\r\n                                            </Col>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button form={user._id} type='submit' variant=\"primary\" >Submit</Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                        </ButtonGroup>\r\n                        <ButtonGroup>\r\n                            <Button size=\"sm\" variant=\"danger\" onClick={e => handleShowdelete(e, user._id)}>Delete</Button>\r\n                            <Modal show={showdelete.activedelete === user._id} onHide={handleClosedelete} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered >\r\n                                <Modal.Header variant=\"danger\" closeButton bg=\"danger\">\r\n                                    <Modal.Title>Delete</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <p>user email is: {user.email}</p>\r\n                                </Modal.Body>\r\n                                <Modal.Footer>\r\n                                    <Button type='button' variant=\"danger\" onClick={e => deleteRecord(e, user._id)}>Delete</Button>\r\n                                </Modal.Footer>\r\n                            </Modal>\r\n                        </ButtonGroup>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    // create record\r\n    const [showcreate, setShowcreate] = React.useState(false);\r\n\r\n    const handleShowcreate = () => {\r\n        setShowcreate(true);\r\n    }\r\n    const handleClosecreate = () => {\r\n        setShowcreate(false);\r\n    }\r\n    // set from info\r\n    const [newuser, setNewuser] = React.useState({\r\n        _id: '',\r\n        email: '',\r\n        password: '',\r\n        first_name: '',\r\n        country_name: '',\r\n        city_name: '',\r\n        state_name: '',\r\n    })\r\n    // create form submit\r\n    const createRecord = e => {\r\n        e.preventDefault();\r\n        console.log(newuser);\r\n        // axios call to express create user\r\n        axios({\r\n            method: 'POST',\r\n            url: url + '/register',\r\n            data: {\r\n                email: newuser.email,\r\n                password: newuser.password,\r\n                first_name: newuser.first_name,\r\n                country_name: newuser.country_name,\r\n                city_name: newuser.city_name,\r\n                state_name: newuser.state_name,\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    console.log(\"create success\");\r\n                    window.location.reload();\r\n                } else {\r\n                    console.log(\"create failed\");\r\n                    window.location.reload();\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    };\r\n    // match form name properity with the input value\r\n    const updateField = e => {\r\n        setNewuser({\r\n            ...newuser,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    const createData = () => {\r\n        return (\r\n            <div>\r\n                <ButtonGroup aria-label=\"Basic example\">\r\n                    <Button size=\"lg\" variant=\"success\" onClick={handleShowcreate}>Create</Button>\r\n                    <Modal show={showcreate} onHide={handleClosecreate} animation={true} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Create</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form id='createuser' onSubmit={createRecord}>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\r\n                                    <Form.Label column sm=\"2\">Email</Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type='text' placeholder=\"sample@sample.com\" value={newuser.email} name=\"email\" onChange={updateField} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">Password</Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type='password' placeholder=\"\" value={newuser.password} name=\"password\" onChange={updateField} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">First Name</Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type='text' placeholder=\"\" value={newuser.first_name} name=\"first_name\" onChange={updateField} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">Country Name</Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type='text' placeholder=\"\" value={newuser.country_name} name=\"country_name\" onChange={updateField} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">City Name</Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type='text' placeholder=\"\" value={newuser.city_name} name=\"city_name\" onChange={updateField} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row} controlId=\"formPlaintextPassword\">\r\n                                    <Form.Label column sm=\"2\">State Name</Form.Label>\r\n                                    <Col sm=\"10\">\r\n                                        <Form.Control type='text' placeholder=\"\" value={newuser.state_name} name=\"state_name\" onChange={updateField} />\r\n                                    </Col>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button form='createuser' type='submit' variant=\"success\" >Submit</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n                </ButtonGroup>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const columns = [{\r\n        dataField: '_id',\r\n        text: 'ID',\r\n        sort: true\r\n    }, {\r\n        dataField: 'first_name',\r\n        text: 'First_name',\r\n        sort: true\r\n    }, {\r\n        dataField: 'email',\r\n        text: 'Email',\r\n        sort: true\r\n    }, {\r\n        dataField: 'password',\r\n        text: 'Password',\r\n        sort: true\r\n    }, {\r\n        dataField: 'country_name',\r\n        text: 'Country_name',\r\n        sort: true\r\n    }, {\r\n        dataField: 'city_name',\r\n        text: 'city_name',\r\n        sort: true\r\n    }, {\r\n        dataField: 'state_name',\r\n        text: 'state_name',\r\n        sort: true\r\n    }, {\r\n        dataField: 'company_address',\r\n        text: 'company_address',\r\n        sort: true\r\n    }, {\r\n        dataField: 'Operations',\r\n        text: 'Operations',\r\n        sort: true\r\n    }];\r\n\r\n    const defaultSorted = [\r\n        {\r\n            dataField: \"name\",\r\n            order: \"desc\"\r\n        }\r\n    ];\r\n\r\n    const { SearchBar } = Search;\r\n\r\n    return (\r\n        <div>\r\n            {createData()}\r\n            <BootstrapTable\r\n                bootstrap4\r\n                stripped\r\n                keyField=\"id\"\r\n                data={users}\r\n                columns={columns}\r\n                defaultSorted={defaultSorted}\r\n                cellEdit={cellEditFactory({\r\n                    mode: \"click\",\r\n                    blurToSave: true\r\n                })}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// https://medium.com/@BogdanSoare/how-to-use-reacts-new-context-api-to-easily-manage-modals-2ae45c7def81","import React, { Component } from 'react';\r\nimport UsetsTable2 from './UsersTable2';\r\nimport Error from './Error';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nfunction CheckLogin() {\r\n    // check if use email is stored in browser, if so then user has logged in and redirect to home page\r\n    if(localStorage.getItem('loginemail')){ \r\n        return <UsetsTable2 />\r\n    } else {\r\n        return <Error />       // user not logged in, redirect to error page\r\n    }\r\n}\r\n\r\nclass Users extends Component{\r\n    render(){\r\n        return(\r\n            <Container fluid>\r\n                <CheckLogin />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nimport NavbarTop from './Navs/NavbarTop';\r\nimport Home from './Pages/Home';\r\nimport Users from './Pages/Users';\r\nimport Error from './Pages/Error';\r\nimport Users2 from './Pages/Users2';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <NavbarTop />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/users\" component={Users} />\r\n        <Route path=\"/users2\" component={Users2} />\r\n        <Route path=\"/error\" component={Error} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// Material-UI\r\n// https://material-ui.com/getting-started/installation/","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport history from './Pages/History';\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\"\r\n\r\n// import { BrowserRouter } from 'react-router-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n    <HashRouter history={history}>\r\n        <App />\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}