{"version":3,"sources":["Navs/NavbarTop.js","Pages/UsersTable.js","Pages/Home.js","Pages/Users.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","button","boxShadow","fontSize","textTransform","container","display","flexWrap","input","margin","NavbarTop","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","react_default","a","createElement","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Home_default","Typography","variant","Button","component","Link","to","onClick","aria-hidden","Dialog","onClose","fullWidth","maxWidth","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Input","placeholder","inputProps","type","DialogActions","message","Home","Component","UsersURL","process","URL","UsersTable","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","nickname","sendReq","bind","assertThisInitialized","xhttp","XMLHttpRequest","setRequestHeader","onload","res","result","JSON","parse","stringify","console","log","document","getElementById","innerHTML","send","ref","createRef","dist_default","data","columns","options","filterType","responsive","Users","Pages_UsersTable","App","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kZAmBMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAEZK,OAAQ,CACNC,UAAW,OACXC,SAAU,GACVC,cAAe,QAEjBC,UAAW,CACTC,QAAS,OACTC,SAAU,QAEZC,MAAO,CACLC,OAAQf,EAAMK,QAAQ,OAIX,SAASW,IACtB,IAAMC,EAAUnB,IADkBoB,EAIVC,IAAMC,UAAS,GAJLC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAI3BM,EAJ2BH,EAAA,GAIrBI,EAJqBJ,EAAA,GAK5BrB,EAAQ0B,cACRC,EAAaC,YAAc5B,EAAM6B,YAAYC,KAAK,OAMxD,SAASC,IACPN,GAAQ,GAGV,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAWlB,EAAQhB,MAEtB+B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,UACfL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,KAAK,QAAQL,UAAWlB,EAAQd,WAAYsC,MAAM,UAAUC,aAAW,QACjFV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,OAEFD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWlB,EAAQX,MAAOoC,aAAW,QAC5DV,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAG,QAAQJ,QAAQ,YAAYJ,MAAM,UAAUN,UAAWlB,EAAQV,QAA3F,QACAyB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQC,UAAWC,IAAMC,GAAG,SAASJ,QAAQ,YAAYJ,MAAM,UAAUN,UAAWlB,EAAQV,QAA5F,UAEFyB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQD,QAAQ,YAAYJ,MAAM,UAAUN,UAAWlB,EAAQV,OAAQ2C,QApB/E,WACEzB,GAAQ,KAmBF,WACAO,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQD,QAAQ,YAAYJ,MAAM,UAAUN,UAAWlB,EAAQV,OAAQ4C,cAAY,QAAnF,cAIJnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CACEzB,WAAYA,EACZH,KAAMA,EACN6B,QAAStB,EACTuB,WAAW,EACXC,SAAY,KACZC,kBAAgB,2BAEhBxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAaC,GAAG,2BAA2B,WAC3C1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACE3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWlB,EAAQN,WACtBqB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAEEC,YAAY,WACZ3B,UAAWlB,EAAQH,MACnBwC,WAAW,EACXS,WAAY,CACVrB,aAAc,kBAIpBV,EAAAC,EAAAC,cAAA,OAAKC,UAAWlB,EAAQN,WACtBqB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACEC,YAAY,WACZE,KAAK,WACL7B,UAAWlB,EAAQH,MACnBwC,WAAW,EACXS,WAAY,CACVrB,aAAc,oBAMxBV,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQI,QAASnB,EAAaU,MAAM,WAApC,aC5GNyB,0CCOWC,mLANP,OACInC,EAAAC,EAAAC,cAAA,8BAHOkC,uCDAfC,EAAWC,8CAAYC,IAAM,QAoElBC,cAhEd,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAApD,OAAAqD,EAAA,EAAArD,CAAAsD,KAAAJ,IAClBE,EAAApD,OAAAuD,EAAA,EAAAvD,CAAAsD,KAAAtD,OAAAwD,EAAA,EAAAxD,CAAAkD,GAAAO,KAAAH,KAAMH,KACDO,MAAQ,CACZC,KAAM,GACNC,SAAU,IAEXR,EAAKS,QAAUT,EAAKS,QAAQC,KAAb9D,OAAA+D,EAAA,EAAA/D,CAAAoD,IANGA,yEAUlB,IAAIY,EAAQ,IAAIC,eAChBD,EAAM9D,KAAK,MAAO6C,GAAU,GAC5BiB,EAAME,iBAAiB,eAAgB,oBACvCF,EAAMG,OAAS,SAACC,GAEf,IAAIC,EAASD,EAAG,OAAH,SACbxB,EAAU0B,KAAKC,MAAMD,KAAKE,UAAUH,IACpCI,QAAQC,IAAI9B,GACZ+B,SAASC,eAAe,YAAYC,UAAYjC,GAEjDoB,EAAMc,oDAINxB,KAAKO,2CAIL,IAAMkB,EAAMlF,IAAMmF,YAmBlB,OACCtE,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,CACCoE,IAAKA,EACL/F,MAAO,aACPkG,KApBU,CACZ,CAAC,eAAgB,mBAAoB,cAAe,GAAI,YACxD,CAAC,cAAe,sBAAuB,SAAU,GAAI,YACrD,CAAC,gBAAiB,WAAY,YAAa,GAAI,YAC/C,CAAC,cAAe,mBAAoB,iBAAkB,GAAI,WAC1D,CAAC,aAAc,sBAAuB,SAAU,GAAI,WACpD,CAAC,gBAAiB,uBAAwB,eAAgB,GAAI,YAC9D,CAAC,YAAa,qBAAsB,gBAAiB,GAAI,aAcvDC,QAvBa,CAAC,OAAQ,QAAS,WAAY,MAAO,UAwBlDC,QAZa,CACfC,WAAY,WACZC,WAAY,YAYX5E,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,MAAIwB,GAAG,YAAYkB,KAAKV,kBA1DJ/C,IAAMiD,WEQhByC,mLATP,OACI7E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAC4E,EAAD,cALI1C,aCmBL2C,MAbf,WACE,OACE/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAClB,EAAD,MACAgB,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,KACEhF,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAInE,UAAWoB,IACjCnC,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOE,KAAK,QAAQnE,UAAWoB,IAC/BnC,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAOE,KAAK,SAASnE,UAAW8D,OCJpBM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACLzF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,KACI1F,EAAAC,EAAAC,cAACyF,EAAD,OACc1B,SAASC,eAAe,SDsHxC,kBAAmB0B,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1cff5e48.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    boxShadow: \"none\",\r\n    fontSize: 17,\r\n    textTransform: \"none\",\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function NavbarTop() {\r\n  const classes = useStyles();\r\n\r\n  // add modal of login button\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" className={classes.title} aria-label=\"menu\">\r\n            <Button component={Link} to=\"/home\" variant=\"contained\" color=\"primary\" className={classes.button}>Home</Button>\r\n            <Button component={Link} to=\"/users\" variant=\"contained\" color=\"primary\" className={classes.button}>Users</Button>\r\n          </Typography>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleClickOpen}>Sign In</Button>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} aria-hidden=\"true\">Sign Out</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth = {'xs'}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Sign In\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <div className={classes.container}>\r\n              <Input\r\n                // defaultValue=\"username\"\r\n                placeholder=\"Username\"\r\n                className={classes.input}\r\n                fullWidth={true}\r\n                inputProps={{\r\n                  'aria-label': 'description',\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.container}>\r\n              <Input\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                className={classes.input}\r\n                fullWidth={true}\r\n                inputProps={{\r\n                  'aria-label': 'description',\r\n                }}\r\n              />\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Go\r\n          </Button>\r\n          {/* <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button> */}\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nvar UsersURL = process.env.URL + \"users\";\r\nvar message;\r\n\r\nclass UsersTable extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tname: '',\r\n\t\t\tnickname: ''\r\n\t\t};\r\n\t\tthis.sendReq = this.sendReq.bind(this);\r\n\t}\r\n\r\n\tsendReq() {\r\n\t\tvar xhttp = new XMLHttpRequest();\r\n\t\txhttp.open(\"GET\", UsersURL, true);\r\n\t\txhttp.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\t\txhttp.onload = (res) => {\r\n\t\t\t// console.log(res['target']['response']);\r\n\t\t\tvar result = res['target']['response'];\r\n\t\t\tmessage = JSON.parse(JSON.stringify(result));\r\n\t\t\tconsole.log(message);\r\n\t\t\tdocument.getElementById(\"response\").innerHTML = message;\r\n\t\t}\r\n\t\txhttp.send();\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.sendReq();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst ref = React.createRef();\r\n\r\n\t\tconst columns = [\"Name\", \"Title\", \"Location\", \"Age\", \"Salary\"];\r\n\r\n\t\tconst data = [\r\n\t\t\t[\"Gabby George\", \"Business Analyst\", \"Minneapolis\", 30, \"$100,000\"],\r\n\t\t\t[\"Aiden Lloyd\", \"Business Consultant\", \"Dallas\", 55, \"$200,000\"],\r\n\t\t\t[\"Jaden Collins\", \"Attorney\", \"Santa Ana\", 27, \"$500,000\"],\r\n\t\t\t[\"Franky Rees\", \"Business Analyst\", \"St. Petersburg\", 22, \"$50,000\"],\r\n\t\t\t[\"Aaren Rose\", \"Business Consultant\", \"Toledo\", 28, \"$75,000\"],\r\n\t\t\t[\"Frankie Parry\", \"Agency Legal Counsel\", \"Jacksonville\", 71, \"$210,000\"],\r\n\t\t\t[\"Mason Ray\", \"Computer Scientist\", \"San Francisco\", 39, \"$142,000\"]\r\n\t\t];\r\n\r\n\t\tconst options = {\r\n\t\t\tfilterType: \"dropdown\",\r\n\t\t\tresponsive: \"scroll\"\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<MUIDataTable\r\n\t\t\t\t\tref={ref}\r\n\t\t\t\t\ttitle={\"Users List\"}\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\tcolumns={columns}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h4 id=\"response\">{this.message}</h4>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UsersTable;\r\n\r\n// Datatables for React using Material-UI \r\n// - https://www.material-ui-datatables.com\r\n// - GitHub https://github.com/gregnb/mui-datatables","import React, { Component } from 'react';\r\n\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <h1>Home page</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport UsetsTable from './UsersTable';\r\n\r\nclass Users extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Users page</h1>\r\n                <UsetsTable/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nimport NavbarTop from './Navs/NavbarTop';\r\nimport Home from './Pages/Home';\r\nimport Users from './Pages/Users';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <NavbarTop />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/users\" component={Users} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// Material-UI\r\n// https://material-ui.com/getting-started/installation/","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}