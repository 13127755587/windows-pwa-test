{"version":3,"sources":["Navs/NavbarTop.js","Pages/Home.js","Pages/UsersTable.js","Pages/Users.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","button","boxShadow","fontSize","textTransform","container","display","flexWrap","input","margin","NavbarTop","classes","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","react_default","a","createElement","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Home_default","Typography","variant","Button","component","Link","to","onClick","aria-hidden","Dialog","onClose","fullWidth","maxWidth","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Input","placeholder","inputProps","type","DialogActions","Home","Component","UsersTable","columns","field","lookup","34","63","data","name","surname","birthYear","birthCity","state","setState","url","_React$useState3","_React$useState4","users","setUsers","useEffect","fetch","then","results","json","console","log","dist_default","editable","onRowAdd","newData","Promise","resolve","setTimeout","toConsumableArray","push","objectSpread","onRowUpdate","oldData","indexOf","onRowDelete","splice","JSON","stringify","require","config","Users","App","react_router","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a5ac76d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    boxShadow: \"none\",\r\n    fontSize: 17,\r\n    textTransform: \"none\",\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  input: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function NavbarTop() {\r\n  const classes = useStyles();\r\n\r\n  // add modal of login button\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\" className={classes.title} aria-label=\"menu\">\r\n            <Button component={Link} to=\"/home\" variant=\"contained\" color=\"primary\" className={classes.button}>Home</Button>\r\n            <Button component={Link} to=\"/users\" variant=\"contained\" color=\"primary\" className={classes.button}>Users</Button>\r\n          </Typography>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={handleClickOpen}>Sign In</Button>\r\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} aria-hidden=\"true\">Sign Out</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth = {'xs'}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Sign In\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <div className={classes.container}>\r\n              <Input\r\n                // defaultValue=\"username\"\r\n                placeholder=\"Username\"\r\n                className={classes.input}\r\n                fullWidth={true}\r\n                inputProps={{\r\n                  'aria-label': 'description',\r\n                }}\r\n              />\r\n            </div>\r\n            <div className={classes.container}>\r\n              <Input\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                className={classes.input}\r\n                fullWidth={true}\r\n                inputProps={{\r\n                  'aria-label': 'description',\r\n                }}\r\n              />\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Go\r\n          </Button>\r\n          {/* <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button> */}\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\n\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <h1>Home page</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nrequire('dotenv').config();\r\n\r\n\r\nexport default function UsersTable() {\r\n\tconst [state, setState] = React.useState({\r\n\t\tcolumns: [{\r\n\t\t\ttitle: 'Name',\r\n\t\t\tfield: 'name'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Surname',\r\n\t\t\tfield: 'surname'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Birth Year',\r\n\t\t\tfield: 'birthYear',\r\n\t\t\ttype: 'numeric'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Birth Place',\r\n\t\t\tfield: 'birthCity',\r\n\t\t\tlookup: {\r\n\t\t\t\t34: 'İstanbul',\r\n\t\t\t\t63: 'Şanlıurfa'\r\n\t\t\t},\r\n\t\t},\r\n\t\t],\r\n\t\tdata: [{\r\n\t\t\tname: 'Mehmet',\r\n\t\t\tsurname: 'Baran',\r\n\t\t\tbirthYear: 1987,\r\n\t\t\tbirthCity: 63\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: 'Zerya Betül',\r\n\t\t\tsurname: 'Baran',\r\n\t\t\tbirthYear: 2017,\r\n\t\t\tbirthCity: 34,\r\n\t\t},\r\n\t\t],\r\n\t});\r\n\r\n\tlet url = process.env.NODE_ENV == 'development' ? 'http://localhost:5000/api/users' : \"https://windows-pwa-express.azurewebsites.net/api/users\"\r\n\r\n\tconst [users, setUsers] = React.useState(null);\r\n\tReact.useEffect(() => {\r\n\t\tfetch(url)\r\n\t\t\t.then(results => results.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetUsers(data);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconsole.log(url);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<MaterialTable title=\"Editable Example\"\r\n\t\t\t\tcolumns={\r\n\t\t\t\t\tstate.columns\r\n\t\t\t\t}\r\n\t\t\t\tdata={\r\n\t\t\t\t\tstate.data\r\n\t\t\t\t}\r\n\t\t\t\teditable={\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonRowAdd: newData =>\r\n\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\tconst data = [...state.data];\r\n\t\t\t\t\t\t\t\t\tdata.push(newData);\r\n\t\t\t\t\t\t\t\t\tsetState({\r\n\t\t\t\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tonRowUpdate: (newData, oldData) =>\r\n\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\tconst data = [...state.data];\r\n\t\t\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\r\n\t\t\t\t\t\t\t\t\tsetState({\r\n\t\t\t\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tonRowDelete: oldData =>\r\n\t\t\t\t\t\t\tnew Promise(resolve => {\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t\tconst data = [...state.data];\r\n\t\t\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\r\n\t\t\t\t\t\t\t\t\tsetState({\r\n\t\t\t\t\t\t\t\t\t\t...state,\r\n\t\t\t\t\t\t\t\t\t\tdata\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t}, 600);\r\n\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t}\r\n\t\t\t\t} />\r\n\t\t\t<div>{JSON.stringify(users)}</div>\r\n\t\t</div>\r\n\t);\r\n}","import React, { Component } from 'react';\r\nimport UsetsTable from './UsersTable';\r\n\r\nclass Users extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Users page</h1>\r\n                <UsetsTable/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\n\r\nimport NavbarTop from './Navs/NavbarTop';\r\nimport Home from './Pages/Home';\r\nimport Users from './Pages/Users';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <NavbarTop />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/users\" component={Users} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n// Material-UI\r\n// https://material-ui.com/getting-started/installation/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}