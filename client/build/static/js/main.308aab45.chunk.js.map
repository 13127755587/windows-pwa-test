{"version":3,"sources":["Pages/History.js","Navs/NavbarTop.js","Pages/Home.js","Pages/UsersTable.js","Pages/Error.js","Pages/Users.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","forceRefresh","url","Navbarfunc","_useState","useState","_useState2","Object","slicedToArray","show","setShow","_useState3","_useState4","username","setUsername","_useState5","_useState6","password","setPassword","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","ButtonToolbar","Button","onClick","Modal","onHide","animation","size","aria-labelledby","centered","Header","closeButton","Title","Body","Form","Group","controlId","Control","type","placeholder","value","onChange","e","target","Footer","console","log","axios","method","data","then","res","status","email","localStorage","setItem","history","push","window","location","reload","catch","err","clear","NavbarTop","React","Component","GetUsername","style","position","left","top","transform","getItem","Home","UsersTable","_React$useState","_React$useState2","users","setUsers","useEffect","fetch","results","json","Table","responsive","map","user","i","key","first_name","country_name","city_name","state_name","company_address","Error","CheckLogin","Error_Error","Users","App","NavbarTop_NavbarTop","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.308aab45.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory({\r\n    forceRefresh: true\r\n});","import React, { useState } from 'react';\r\nimport { Navbar, Nav, Button, ButtonToolbar, Modal, Form, Alert } from 'react-bootstrap';\r\nimport history from '../Pages/History';\r\nimport axios from 'axios'; // axios is a http request module\r\n\r\nlet url = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api/users' : \"https://windows-pwa-express.azurewebsites.net/api/users\"\r\n\r\nfunction Navbarfunc() {\r\n\tconst [show, setShow] = useState(false); // React 16.8.0 is using state hook to replace the component mount life circle\r\n\r\n\tconst handleShow = () => setShow(true); // This is for poping up the login page\r\n\tconst handleClose = () => setShow(false);\r\n\r\n\tconst [username, setUsername] = useState(''); // set default value to empty and fetch data from input box\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tconst handleSingin = () => {\r\n\t\tsetShow(false);\r\n\t\tconsole.log(username);\r\n\t\tconsole.log(password);\r\n\r\n\t\taxios({ \t\t\t\t// send POST request to Express API\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: url + '/login',\r\n\t\t\tdata: {\r\n\t\t\t\tusername: username,\r\n\t\t\t\tpassword: password\r\n \t\t\t }\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\tif(res.status == 200){\r\n\t\t\t\t\tconsole.log(res.data.email); // login success\r\n\t\t\t\t\tlocalStorage.setItem('loginemail', res.data.email); // store the user email in browser storage\r\n\t\t\t\t\thistory.push('/#/home'); \t// route to home page \r\n\t\t\t\t\twindow.location.reload();\t// refresh teh page\r\n\t\t\t\t} else {\r\n\t\t\t\t\thistory.push('/#/home');\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\thistory.push('/#/error');\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst handleSingout = () => {\r\n\t\t// console.log('handleSingout');\r\n\t\tlocalStorage.clear();\t// clear user email information when clicking signout\r\n\t\twindow.location.reload();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n\t\t\t\t<Navbar.Brand href=\"#home\">Express React MongoDB</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t<Nav.Link href=\"#home\">Home</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"#users\">Users</Nav.Link>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t\t<Button variant=\"info\" onClick={handleShow}>Signin</Button>\r\n\t\t\t\t\t\t\t{/* pop out modal for user login */}\r\n\t\t\t\t\t\t\t<Modal show={show} onHide={handleClose} animation={false} size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n\t\t\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t\t\t<Modal.Title>Modal heading</Modal.Title>\r\n\t\t\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicUsername\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t\t\t<Button type='button' variant=\"primary\" onClick={handleSingin}>\r\n\t\t\t\t\t\t\t\t\t\tGo\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t\t<ButtonToolbar>\r\n\t\t\t\t\t\t\t<Button variant=\"light\" onClick={handleSingout}>Signout</Button>\r\n\t\t\t\t\t\t</ButtonToolbar>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Navbar>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default class NavbarTop extends React.Component {\r\n\trender() {\r\n\t\treturn ( \r\n\t\t\t\t<Navbarfunc />\t// invoke the function as a component\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\n\nfunction GetUsername() {\n    // const [username, setUsername] = useState('');\n\n    let style = {\n        position: 'absolute', left: '50%', top: '50%',\n        transform: 'translate(-50%, -50%)'\n    }\n\n    return (\n        <div style={style}>\n            <h3>Welcome {localStorage.getItem('loginemail')}</h3>\n        </div>\n    );\n}\n\nexport default class Home extends React.Component {\n    render() {\n        return (\n            <div>\n                <GetUsername />\n            </div>\n        );\n    }\n}","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nexport default function UsersTable() {\r\n\tlet url = process.env.NODE_ENV === 'development' ? 'http://localhost:5000/api/users' : \"https://windows-pwa-express.azurewebsites.net/api/users\"\r\n\r\n\tconst [users, setUsers] = React.useState([]);\r\n\r\n\t// use react hook to fetch all the user data from Express API\r\n\tReact.useEffect(() => {\r\n\t\tfetch(url)\r\n\t\t\t.then(results => results.json())\r\n\t\t\t.then(users => {\r\n\t\t\t\tsetUsers(users);\r\n\t\t\t\t// console.log(users);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst renderTable = () => {\r\n\t\treturn users.map((user, i) => {\r\n\t\t\t// console.log(user);\r\n\t\t\t// console.log(user.first_name);\r\n\t\t\treturn (\r\n\t\t\t\t<tr key={i}>\r\n\t\t\t\t\t<td>{user.first_name}</td>\r\n\t\t\t\t\t<td>{user.email}</td>\r\n\t\t\t\t\t<td>{user.password}</td>\r\n\t\t\t\t\t<td>{user.country_name}</td>\r\n\t\t\t\t\t<td>{user.city_name}</td>\r\n\t\t\t\t\t<td>{user.state_name}</td>\r\n\t\t\t\t\t<td>{user.company_address}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Table responsive >\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>First_name</th>\r\n\t\t\t\t\t\t<th>Email</th>\r\n\t\t\t\t\t\t<th>Password</th>\r\n\t\t\t\t\t\t<th>Country_name</th>\r\n\t\t\t\t\t\t<th>city_name</th>\r\n\t\t\t\t\t\t<th>state_name</th>\r\n\t\t\t\t\t\t<th>company_address</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>{renderTable()}</tbody>\r\n\t\t\t</Table>\r\n\t\t</div>\r\n\t);\r\n}","import React from 'react';\r\n\r\nexport default class Error extends React.Component {\r\n    render() {\r\n        const style = {\r\n            position: 'absolute', left: '50%', top: '50%',\r\n            transform: 'translate(-50%, -50%)'\r\n        }\r\n        return (\r\n            <div style={style}>\r\n                <h3>Sorry, this site is for Admin only</h3>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport UsetsTable from './UsersTable';\r\nimport Error from './Error';\r\n\r\nfunction CheckLogin() {\r\n    // check if use email is stored in browser, if so then user has logged in and redirect to home page\r\n    if(localStorage.getItem('loginemail')){ \r\n        return <UsetsTable />\r\n    } else {\r\n        return <Error />       // user not logged in, redirect to error page\r\n    }\r\n}\r\n\r\nclass Users extends Component{\r\n    render(){\r\n        return(\r\n            <CheckLogin />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\nimport { Route, Switch } from \"react-router-dom\";\n\nimport './App.css';\n\nimport NavbarTop from './Navs/NavbarTop';\nimport Home from './Pages/Home';\nimport Users from './Pages/Users';\nimport Error from './Pages/Error';\n\nfunction App() {\n  return (\n    <div>\n      <NavbarTop />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/users\" component={Users} />\n        <Route path=\"/error\" component={Error} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n\n// Material-UI\n// https://material-ui.com/getting-started/installation/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport history from './Pages/History';\n\n// import { BrowserRouter } from 'react-router-dom';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <HashRouter history={history}>\n        <App />\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}